<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{establishment.name}} - Profile</title>
    <link rel="stylesheet" href="/styles/style.css">
    <link rel="stylesheet" href="/styles/shared_styles/reviews.css">
    <link rel="stylesheet" href="/styles/morestyles/restoProfile.css">
	<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
	<script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/2.3.8/purify.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://kit.fontawesome.com/b496b1e4d0.js" crossorigin="anonymous"></script>
	<style>
		.review-images-preview {
			display: flex;
			flex-wrap: wrap;
			gap: 10px;
			margin-top: 10px;
			margin-bottom: 15px;
		}
    
		.preview-image {
			width: 100px;
			height: 100px;
			object-fit: cover;
			border-radius: 4px;
			border: 1px solid #ddd;
		}
	</style>
	<style>
		.vote button {
			background: none;
			border: none;
			cursor: pointer;
			padding: 5px;
			margin: 0 5px;
			color: #666;
		}
		.vote button.active {
			color: #025000;
			font-weight: bold;
		}
    
		.upvote-count, .downvote-count {
			font-size: 0.8em;
			margin-left: 2px;
		}
	</style>

    {{#if isLoggedIn}}
        <script>
            window.isLoggedIn = true;
            window.currentUserId = "{{userId}}";
        </script>
    {{else}}
        <script>
            window.isLoggedIn = false;
            window.currentUserId = null;
        </script>
    {{/if}}
</head>
<body>

<div class="header">
    <div class="home">
        <a href="/">ANIMO
            <img style="height: 40px;" src="/icons/ANIMOEATS_logo.png" alt="jollysnorlax.png" >
            EATS</a>
    </div>
    <div class="navlink"> <a href="/restoList">Restaurants</a> </div>
	<div class="profile">
		{{#if isLoggedIn}}
			<a href="/userProfile/{{currentUser}}" class="pfp-link">
				<div class="pfp" style="background-image: url('{{loggedInUserData.avatar}}'); background-size: cover; background-position: center;"></div>
			</a>
			<div class="logout-hover">
				<form id="logoutForm" action="/logout" method="POST" style="display:inline;">
					<button type="submit" class="profile-btn"> Log out <i class="fa fa-sign-out" aria-hidden="true"></i></button>
				</form>
			</div>
		{{else}}
			<button id="profileBtn" class="profile-btn"> Log-in <i class="fa fa-solid fa-user"></i></button>
		{{/if}}
	</div>
</div>

<div id="profileModal" class="modal">
    <div class="modal-content"><b>Existing Profile</b><br>
        <label for="username">
            <input id="username" type="text" placeholder="Username"> <br>
        </label>

        <label for="password">
            <input id="password" type="password" placeholder="Password">
        </label>

        <!-- Add this checkbox -->
        <div style="margin: 10px 0; display: flex; align-items: center;">
            <input type="checkbox" id="rememberMe" style="width: auto; margin-right: 5px;">
            <label for="rememberMe" style="font-size: 14px; color: #666;">Remember me for 3 weeks</label>
        </div>

        <button id="loginBtn" class="button_dkgreen">Log-in <i class="fa fa-solid fa-user"></i></button>
        <p>Don't have an account yet? <a href="/sign-up">Sign-Up</a></p>
    </div>
</div>


<!-- Establishment Banner -->
<div class="resto-banner" style="background-image: url('{{establishment.bannerImage}}');">
    <div class="restaurant-info">
        <h1 class="resto-name">{{establishment.name}}</h1>
        <div class="primary-details">
            <p class="rating">
                {{establishment.overallRating}} 
                <img class="star-icon" src="/icons/star.png" alt="star"> 
                ({{establishment.reviews.length}} reviews)
            </p>
            <p class="address">{{establishment.address}}</p>
            <p class="phone">üìû{{establishment.phone}}</p>
			{{#if isOwnerView}}
				<button class="edit-resto-button" onclick="openEditRestoModal()">
					<i class="fa fa-pencil"></i> Edit Restaurant
				</button>
			{{else}}
				{{#if isOwner}}
					<a href="/restoProfile/{{establishment._id}}/owner" class="owner-view-button">
						<i class="fa fa-eye"></i> Switch to Owner View
					</a>
				{{/if}}
			{{/if}}
        </div>
        <div class="supplementary-details">
            <span class="hours">Open {{establishment.openingHours}}</span>
            <span class="price">{{establishment.priceRange}}</span>
            <span class="cuisine">{{establishment.cuisine}}</span>
        </div>
    </div>
</div>

<!-- Tabs -->
<div class="establishment-tabs">
    <div class="tabs__sidebar">
        <button class="tabs__button" data-for-tab="1">Overview</button>
        <button class="tabs__button" data-for-tab="2">Menu</button>
        <button class="tabs__button" data-for-tab="3">Photos</button>
    </div>

    <!-- Overview -->
    <section class="tabs__content" data-tab="1">
        <p class="establishment-desc">{{establishment.description}}</p>

        <section class="rating-graph">
            <div class="rating">
                <div class="rating__average">
                    <h1>{{averageRating}}</h1>
                    <div class="star-outer">
                        <div class="star-inner" style="width: {{multiply averageRating 20}}%;"></div>
                    </div>
                    <p>{{totalRatings}} review{{#if (gt totalRatings 1)}}s{{/if}}</p>
                </div>
                <div class="rating__progress">
                    {{#each ratingData}}
                        <div class="rating__progress-value">
                            <p>{{this.star}} <span class="star"> &#9733;</span></p>
                            <div class="progress">
                                <div class="bar" style="width: {{this.percentage}}%;"></div>
                            </div>
                            <p>{{this.count}}</p>
                        </div>
                    {{/each}}
                </div>
            </div>
        </section>

        <!-- Review Submission Form -->
        <section class="review-section">
            <h2>Leave a Review</h2>
            {{#if isLoggedIn}}
            <article class="review-container">
                <form id="reviewForm" style="width: 100%;">
                    <!-- Quill editor for rich text editing -->
                    <input type="text" id="reviewTitle" placeholder="Review title" style="margin-bottom: 10px">
                    <div id="quill-editor" style="height: 150px; margin-bottom: 10px;"></div>

                    <input type="file" id="reviewMedia" multiple accept="image/*" onchange="loadReviewImages(event)" style="margin:0 0 10px 0">
                    <div id="reviewImagesPreview" class="review-images-preview"></div>

                    <input type="hidden" id="reviewBody" name="body"> Rating:
                    <select id="reviewRating" style="padding: 8px; border: none;border-radius: 4px;">
                        <option value="5">‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è</option>
                        <option value="4">‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è</option>
                        <option value="3">‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è</option>
                        <option value="2">‚≠êÔ∏è‚≠êÔ∏è</option>
                        <option value="1">‚≠êÔ∏è</option>
                    </select>
                    <button type="submit" class="button_dkgreen" style="float:right;" >Submit Review</button>
                </form>
            </article>
            {{else}}
                <div class="login-prompt">
                    <p>Please <a href="#" onclick="document.getElementById('profileModal').style.display='flex'">log in</a> to add a review</p>
                </div>
            {{/if}}
        </section>


        <section class="reviews-holder">
            <h2>Reviews</h2>
            <input type="text" id="reviewSearch" placeholder="Search reviews..." oninput="filterReviews()" style="width: 50%;">

            <label for="reviewSort">Sort Reviews:</label>
            <select id="reviewSort" onchange="sortReviews()" style="font-size: 1rem; padding: 0.5rem; outline: lightgray 1px solid">
                <option value="desc" {{#if (eq sortOption 'desc')}}selected{{/if}}>Highest to Lowest Rating</option>
                <option value="asc" {{#if (eq sortOption 'asc')}}selected{{/if}}>Lowest to Highest Rating</option>
                <option value="upvotes" {{#if (eq sortOption 'upvotes')}}selected{{/if}}>Most Upvoted Reviews</option>
            </select>

            <script>
                function sortReviews() {
                    const sortOrder = document.getElementById('reviewSort').value;
                    const urlParams = new URLSearchParams(window.location.search);
                    urlParams.set('sort', sortOrder);
                    window.location.search = urlParams.toString(); // ‚úÖ Reload with new sort option
                }
            </script>

            <script>
                function filterReviews() {
                    let searchQuery = document.getElementById('reviewSearch').value.toLowerCase();
                    let reviews = document.querySelectorAll('.reviews');

                    reviews.forEach(review => {
                        let reviewText = review.querySelector('.description').innerText.toLowerCase();
                        if (reviewText.includes(searchQuery)) {
                            review.style.display = "block";
                        } else {
                            review.style.display = "none";
                        }
                    });
                }
            </script>


            {{#each establishment.reviews}}
                <article class="reviews">
                    <div class="review-container" data-review-id="{{this._id}}">
                        <img class="display-pic" src="{{this.userId.avatar}}" alt="User image">
                        <div class="heading">
                            <a href="/userProfile/{{this.userId._id}}">{{this.userId.username}}</a>
                        </div>
                        <div class="star-rating">
                            <img class="star-icon-review" src="/icons/star.png" alt="star">
                            {{this.rating}}
                        </div>
                        <div class="heading">{{this.title}}</div>
                        <div class="description">{{{this.body}}}</div>
                        {{#if this.media}}
                            <div class="review-images">
                                {{#each this.media}}
                                    <img src="{{this}}" alt="Review Image">
                                {{/each}}
                            </div>
                        {{/if}}
                        <div class="date">{{formatDate this.createdAt}}</div>
                        {{#if this.edited}}
                            <div class="edit-tag"> edited </div>
                        {{/if}}

                        <!-- Vote logic -->
						<div class="vote">
							{{#if @root.isLoggedIn}}
								<button class="upvote {{#if (eq this.userVote 'up')}}active{{/if}}" onclick="handleVote('{{this._id}}', 'up')">
									<i class="fa-solid fa-up-long"></i>
									<span class="upvote-count">{{this.upvoteCount}}</span>
								</button>
								<button class="downvote {{#if (eq this.userVote 'down')}}active{{/if}}" onclick="handleVote('{{this._id}}', 'down')">
									<i class="fa-solid fa-down-long"></i>
									<span class="downvote-count">{{this.downvoteCount}}</span>
								</button>
							{{else}}
								<button class="upvote" onclick="document.getElementById('profileModal').style.display='flex'">
									<i class="fa-solid fa-up-long"></i>
									<span class="upvote-count">{{this.upvoteCount}}</span>
								</button>
								<button class="downvote" onclick="document.getElementById('profileModal').style.display='flex'">
									<i class="fa-solid fa-down-long"></i>
									<span class="downvote-count">{{this.downvoteCount}}</span>
								</button>
							{{/if}}
						</div>

                        <!-- Owner Reply Button (Visible only in Owner View) -->
                        {{#if ../isOwnerView}}
                            <button class="reply-button" onclick="openReplyModal('{{this._id}}')">
                                <i class="fa fa-reply"></i> Reply
                            </button>
                        {{/if}}
                    </div>

                    {{#if this.ownerResponse}}
                        <div id="owner-rep1" class="reply-container">
                            <img class="display-pic" src="{{../establishment.bannerImage}}" alt="pfp.jpg">
                            <div class="heading"><a href="/userProfile/{{this.ownerResponse.ownerId}}">Owner</a></div>
                            <div class="description">{{{this.ownerResponse.body}}}</div>
                            <div class="date">{{formatDate this.ownerResponse.createdAt}}</div>
                            <div class="vote">
                                <button class="upvote">
                                    <i class="fa-solid fa-up-long"></i>
                                    <span class="upvote-count">{{this.ownerResponse.upvoteCount}}</span>
                                </button>
                                <button class="downvote">
                                    <i class="fa-solid fa-down-long"></i>
                                    <span class="downvote-count">{{this.ownerResponse.downvoteCount}}</span>
                                </button>
                            </div>

                            <!-- Edit and Delete buttons for replies -->
                            {{#if ../isOwnerView}}
                                <button class="edit-reply-btn" data-id="{{this._id}}" data-body="{{this.ownerResponse.body}}">
                                    <i class="fa fa-edit"></i> Edit
                                </button>
                                <button class="delete-reply-btn" data-id="{{this._id}}">
                                    <i class="fa fa-trash"></i> Delete
                                </button>
                            {{/if}}
                        </div>
                    {{/if}}
                </article>
            {{/each}}
        </section>
    </section>

        <script>
		const quill = new Quill('#quill-editor', {
			theme: 'snow',
			placeholder: 'Share your experience...',
			modules: {
				toolbar: [
					['bold', 'italic', 'underline'],
					[{ 'list': 'ordered' }, { 'list': 'bullet' }],
					['clean']
				]
			}
		});
		document.getElementById("reviewForm").addEventListener("submit", async function (e) {
			e.preventDefault();
    
			// Get HTML content from Quill editor, sanitize it, and store in hidden input
			const quillContent = quill.root.innerHTML;
			const sanitizedContent = DOMPurify.sanitize(quillContent);
			document.getElementById("reviewBody").value = sanitizedContent;
    
			const body = document.getElementById("reviewBody").value;
			const rating = document.getElementById("reviewRating").value;
			const title = document.getElementById("reviewTitle").value;
            const establishmentId = "{{establishment._id}}";

            let formData = new FormData();
            formData.append("title", title); // ‚úÖ Add title here
            formData.append("establishmentId", establishmentId);
            formData.append("body", body);
            formData.append("rating", rating);

            const mediaFiles = document.getElementById("reviewMedia").files;
            for (let i = 0; i < mediaFiles.length; i++) {
                formData.append("media", mediaFiles[i]);
            }

            const response = await fetch("/api/reviews", {
                method: "POST",
                body: formData,
            });

            const result = await response.json();
            if (response.ok) {
                document.getElementById("reviewTitle").value = "";
                document.getElementById("reviewBody").value = "";
                alert("Review posted!");
                location.reload();
            } else {
                console.error("Review submission error:", result);
                alert("Failed to post review: " + result.details);
            }
        });

        </script>

        <!-- Reviews 
        <section class="reviews-holder">
            <h2>Reviews</h2>
            {{#each establishment.reviews}}
                <article class="reviews">
                    <div class="review-container">
                        <img class="display-pic" src="{{this.userId.avatar}}" alt="User image">
                        <div class="heading">
                            <a href="/userProfile/{{this.userId._id}}">{{this.userId.username}}</a>
                        </div>
                        <div class="star-rating">
                            <img class="star-icon-review" src="/icons/star.png" alt="star">
                            {{this.rating}}
                        </div>
                        <div class="description">{{{this.body}}}</div>
                        <div class="date">{{formatDate this.createdAt}} |</div>
                        {{#if this.edited}}
                            <div class="edited">edited |</div>
                        {{/if}}
                        <div class="vote">
                            <button class="upvote"><i class="fa-solid fa-up-long"></i></button>
                            <button class="downvote"><i class="fa-solid fa-down-long"></i></button>
                        </div>
                    </div>
                </article>
            {{/each}}
        </section>
    </div>
    -->


    <!-- Reply Modal -->
    <div id="replyModal" class="modal">
        <div class="modal-content" style="background-color:white;">
            <h2>Reply to Review</h2>
            <form id="replyForm">
                <!-- Quill Editor for Rich Text Formatting -->
                <div id="quill-reply-editor" style="height: 150px; margin-bottom: 15px;"></div>
                <input type="hidden" id="replyBody" name="body">

                <!-- File Input for Image Uploads -->
                <input type="file" id="replyMedia" multiple accept="image/*" onchange="loadReplyImages(event)">
                <div id="replyImagesPreview" class="review-images-preview"></div>

                <!-- Hidden Input for Review ID -->
                <input type="hidden" id="reviewId" value="">

                <div class="button-group">
                    <button type="submit" class="save-button">Submit Reply</button>
                    <button type="button" class="cancel-button" onclick="closeReplyModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Edit Reply Modal -->
    <div id="editReplyModal" class="modal">
        <div class="modal-content" style="background-color:white;">
            <h2>Edit Reply</h2>
            <form id="editReplyForm">
                <!-- Hidden Input for Reply ID -->
                <input type="hidden" id="editReplyId" value="">

                <!-- Quill Editor for Rich Text Formatting -->
                <div id="quill-edit-reply-editor" style="height: 150px; margin-bottom: 15px;"></div>
                <input type="hidden" id="editReplyBody" name="body">

                <div class="button-group">
                    <button type="submit" class="save-button">Save Changes</button>
                    <button type="button" class="cancel-button" onclick="closeEditReplyModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>




    <!-- Menu -->
    <div class="tabs__content" data-tab="2">
        <div class="menu-tab">
            {{#each menu.items}}
                <div class="menu-item">
                    <img src="{{this.image}}" alt="Menu Image">
                    <p>{{this.name}}</p>
                    <p>{{this.description}}</p>
                    <p>‚Ç±{{this.price}}</p>
                </div>
            {{else}}
                <p>No menu items available.</p>
            {{/each}}
        </div>
    </div>

    <!-- Photos -->
    <div class="tabs__content" data-tab="3">
        <div class="photo-tab">
            {{#each photos}}
                <img src="{{this.imageUrl}}" alt="Gallery Image">
            {{/each}}
        </div>
    </div>
</div>


<!-- Edit Restaurant Profile Modal -->
<div id="editRestoProfileModal" class="modal">
    <div class="modal-content">
        <h2>Edit Restaurant Profile</h2>
        <form id="editRestoProfileForm">
            <div class="form-group">
                <label for="editRestoName">Name:</label>
                <input type="text" id="editRestoName" class="edit-input">
            </div>
            <div class="form-group">
                <label for="editRestoDescription">Description:</label>
                <textarea id="editRestoDescription" class="edit-input" rows="3"></textarea>
            </div>
            <div class="form-group">
                <label for="editRestoBanner">Banner Image:</label>
                <input type="file" id="editRestoBanner" accept="image/*">
            </div>
            <div class="button-group">
                <button type="submit" class="save-button">Save Changes</button>
                <button type="button" class="cancel-button">Cancel</button>
            </div>
			 <input type="hidden" id="establishmentId" value="{{establishment._id}}">
        </form>
    </div>
</div>

<!-- Tab Switching Script -->
<script>
    document.addEventListener("DOMContentLoaded", () => {
        document.querySelectorAll(".tabs__button").forEach(button => {
            button.addEventListener("click", () => {
                const tabsContainer = button.closest(".establishment-tabs");
                const tabNumber = button.dataset.forTab;
                const tabToActivate = tabsContainer.querySelector(`.tabs__content[data-tab="${tabNumber}"]`);

                tabsContainer.querySelectorAll(".tabs__button").forEach(btn => btn.classList.remove("tabs__button--active"));
                tabsContainer.querySelectorAll(".tabs__content").forEach(tab => tab.classList.remove("tabs__content--active"));

                button.classList.add("tabs__button--active");
                tabToActivate.classList.add("tabs__content--active");
            });
        });

        // Auto activate the first tab
        document.querySelector('.tabs__button[data-for-tab="1"]').click();
    });
</script>
<script>
    function loadReviewImages(event) {
        const previewContainer = document.getElementById('reviewImagesPreview');
        previewContainer.innerHTML = ''; // Clear previous previews
        
        const files = event.target.files;
        
        if (files.length > 0) {
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const reader = new FileReader();
                
                reader.onload = function() {
                    const img = document.createElement('img');
                    img.src = reader.result;
                    img.className = 'preview-image';
                    previewContainer.appendChild(img);
                }
                
                reader.readAsDataURL(file);
            }
        }
    }
</script>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();

    socket.on('reviewUpdated', () => {
        console.log('Review updated ‚Äî refreshing page');
        location.reload(); // ‚úÖ Refresh the page to reflect changes
    });
</script>


<script src="/scripts/profileModal.js"></script>
<script src="/scripts/editRestoProfile.js"></script>
<script src="/scripts/replyModal.js"></script>
<script src="/scripts/editReply.js"></script>
<script>
    // Initialize Quill Editor for Reply Modal
    const quillReply = new Quill('#quill-reply-editor', {
        theme: 'snow',
        placeholder: 'Write your reply...',
        modules: {
            toolbar: [
                ['bold', 'italic', 'underline'],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                ['clean']
            ]
        }
    });
</script>
<script>
    // Initialize Quill Editor for Edit Reply Modal
    const quillEditReply = new Quill('#quill-edit-reply-editor', {
        theme: 'snow',
        placeholder: 'Edit your reply...',
        modules: {
            toolbar: [
                ['bold', 'italic', 'underline'],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                ['clean']
            ]
        }
    });
</script>
<script src="/scripts/updownVote.js"></script>
</body>
</html>
